import { NextPage } from "next";
import { useState, useEffect, useMemo } from "react";
import Head from "next/head";
import Modal from "@/components/modal";
import { Carousel } from "@/components/carousel";
import { Title } from "@/components/title";
import ModalGift from "@/components/modalGift";

export type Iprops = {
  id: number;
  name: string;
  image: string;
};

const Index: NextPage = () => {
  const [openModal, setOpenModal] = useState(true);
  const [openModalGift, setOpenModalGift] = useState(false);
  const [gift, setGift] = useState<Iprops | undefined>();
  const [isGift, setIsGift] = useState<boolean>(true);
  const [loading, setIsLoading] = useState(true);

  const data = [
    {
      id: 1,
      name: "Mystery Box",
      image: "/mystery.png",
    },
    {
      id: 2,
      name: "Food and Beverage",
      image: "/fast-food.png",
    },
    {
      id: 3,
      name: "Zonk",
      image: "/trash.png",
    },
  ];

  const handleClose = () => {
    setOpenModalGift(false);
    setIsLoading(true);
  };

  return (
    <>
      <Head>
        <title>birthday</title>
        <meta name="description" content="Generated by Create Next Stack." />
      </Head>
      <Title />
      <Carousel
        handleClickGift={() => {
          setOpenModalGift(true);
          setIsGift(false);
          setGift(data.find((e: any) => e.id === Math.ceil(Math.random() * 3)));
          setTimeout(() => {
            setIsLoading(false);
          }, 1000);
        }}
        isGift={isGift}
      />
      <Modal onCloseModal={() => setOpenModal(false)} isModalOpen={openModal} />
      <ModalGift
        onCloseModal={() => {
          handleClose();
        }}
        isModalOpen={openModalGift}
        data={gift}
        isLoading={loading}
      />
    </>
  );
};

export default Index;
